/*=================================*/
/* DBMS NAME:	ORACLE Version 12c */
/*=================================*/

ALTER TABLE BOOKS
   DROP CONSTRAINT FK_BOOKS_BOOKS_AUT_AUTHORS;

ALTER TABLE BOOKS
   DROP CONSTRAINT FK_BOOKS_BOOKS_PUB_PUBLISHE;

ALTER TABLE BOOKS_CATEGORIES
   DROP CONSTRAINT FK_BOOKS_CA_BOOKS_CAT_BOOKS;

ALTER TABLE BOOKS_CATEGORIES
   DROP CONSTRAINT FK_BOOKS_CA_BOOKS_CAT_CATEGORI;

ALTER TABLE BOOKS_STUDENTS
   DROP CONSTRAINT FK_BOOKS_ST_BOOKS_STU_BOOKS;

ALTER TABLE BOOKS_STUDENTS
   DROP CONSTRAINT FK_BOOKS_ST_BOOKS_STU_STUDENTS;

ALTER TABLE STUDENTS
   DROP CONSTRAINT FK_STUDENTS_STUDENTS__LIBRARYC;

DROP TABLE AUTHORS CASCADE CONSTRAINTS;

DROP INDEX BOOKS_AUTHORS_FK;

DROP INDEX BOOKS_PUBLISHERS_FK;

DROP TABLE BOOKS CASCADE CONSTRAINTS;

DROP INDEX BOOKS_CATEGORIES2_FK;

DROP INDEX BOOKS_CATEGORIES_FK;

DROP TABLE BOOKS_CATEGORIES CASCADE CONSTRAINTS;

DROP INDEX BOOKS_STUDENTS2_FK;

DROP INDEX BOOKS_STUDENTS_FK;

DROP TABLE BOOKS_STUDENTS CASCADE CONSTRAINTS;

DROP TABLE CATEGORIES CASCADE CONSTRAINTS;

DROP TABLE LIBRARYCARDS CASCADE CONSTRAINTS;

DROP TABLE PUBLISHERS CASCADE CONSTRAINTS;

DROP INDEX STUDENTS_CARDS_FK;

DROP TABLE STUDENTS CASCADE CONSTRAINTS;

DROP TABLE FACT_BOOK;

DROP TABLE DIM_AUTHOR;

DROP TABLE DIM_PUBLISHER;

DROP TABLE DIM_GENRE;

/*==============================================================*/
/* TABLE: AUTHORS                                               */
/*==============================================================*/
CREATE TABLE AUTHORS (
   AUTHORID             VARCHAR2(10)          NOT NULL,
   AUTHORFIRSTNAME      VARCHAR2(50),
   AUTHORLASTNAME       VARCHAR2(50),
   AUTHORCOUNTRY        VARCHAR2(30),
   CONSTRAINT PK_AUTHORS PRIMARY KEY (AUTHORID)
);

/*==============================================================*/
/* TABLE: BOOKS                                                 */
/*==============================================================*/
CREATE TABLE BOOKS (
   ISBN                 VARCHAR2(13)          NOT NULL,
   AUTHORID             VARCHAR2(10)          NOT NULL,
   PUBLISHERID          VARCHAR2(10)          NOT NULL,
   BOOKTITLE            VARCHAR2(50),
   BOOKPUBLISHDATE      DATE,
   BOOKQUANTITY         SMALLINT,
   BOOKPRICE            REAL,
   CONSTRAINT PK_BOOKS PRIMARY KEY (ISBN)
);

/*==============================================================*/
/* INDEX: BOOKS_PUBLISHERS_FK                                   */
/*==============================================================*/
CREATE INDEX BOOKS_PUBLISHERS_FK ON BOOKS (
   PUBLISHERID ASC
);

/*==============================================================*/
/* INDEX: BOOKS_AUTHORS_FK                                      */
/*==============================================================*/
CREATE INDEX BOOKS_AUTHORS_FK ON BOOKS (
   AUTHORID ASC
);

/*==============================================================*/
/* TABLE: BOOKS_CATEGORIES                                      */
/*==============================================================*/
CREATE TABLE BOOKS_CATEGORIES (
   ISBN                 VARCHAR2(13)          NOT NULL,
   CATEGORYID           VARCHAR2(5)           NOT NULL,
   CONSTRAINT PK_BOOKS_CATEGORIES PRIMARY KEY (ISBN, CATEGORYID)
);

/*==============================================================*/
/* INDEX: BOOKS_CATEGORIES_FK                                   */
/*==============================================================*/
CREATE INDEX BOOKS_CATEGORIES_FK ON BOOKS_CATEGORIES (
   ISBN ASC
);

/*==============================================================*/
/* INDEX: BOOKS_CATEGORIES2_FK                                  */
/*==============================================================*/
CREATE INDEX BOOKS_CATEGORIES2_FK ON BOOKS_CATEGORIES (
   CATEGORYID ASC
);

/*==============================================================*/
/* TABLE: BOOKS_STUDENTS                                        */
/*==============================================================*/
CREATE TABLE BOOKS_STUDENTS (
   ISBN                 VARCHAR2(13)          NOT NULL,
   STDID                VARCHAR2(9)           NOT NULL,
   BOOKBORROWINGDATE    DATE,
   BOOKDELIVERYDATE     DATE,
   CONSTRAINT PK_BOOKS_STUDENTS PRIMARY KEY (ISBN, STDID)
);

/*==============================================================*/
/* INDEX: BOOKS_STUDENTS_FK                                     */
/*==============================================================*/
CREATE INDEX BOOKS_STUDENTS_FK ON BOOKS_STUDENTS (
   ISBN ASC
);

/*==============================================================*/
/* INDEX: BOOKS_STUDENTS2_FK                                    */
/*==============================================================*/
CREATE INDEX BOOKS_STUDENTS2_FK ON BOOKS_STUDENTS (
   STDID ASC
);

/*==============================================================*/
/* TABLE: CATEGORIES                                            */
/*==============================================================*/
CREATE TABLE CATEGORIES (
   CATEGORYID           VARCHAR2(5)           NOT NULL,
   CATEGORYNAME         VARCHAR2(40),
   CONSTRAINT PK_CATEGORIES PRIMARY KEY (CATEGORYID)
);

/*==============================================================*/
/* TABLE: LIBRARYCARDS                                          */
/*==============================================================*/
CREATE TABLE LIBRARYCARDS (
   CARDNO               VARCHAR2(10)          NOT NULL,
   CARDEXPDATE          DATE                  NOT NULL,
   CONSTRAINT PK_LIBRARYCARDS PRIMARY KEY (CARDNO)
);

/*==============================================================*/
/* TABLE: PUBLISHERS                                            */
/*==============================================================*/
CREATE TABLE PUBLISHERS (
   PUBLISHERID          VARCHAR2(10)          NOT NULL,
   PUBLISHERFULLNAME    VARCHAR2(50),
   PUBLISHERADDRESS     VARCHAR2(100),
   CONSTRAINT PK_PUBLISHERS PRIMARY KEY (PUBLISHERID)
);

/*==============================================================*/
/* TABLE: STUDENTS                                              */
/*==============================================================*/
CREATE TABLE STUDENTS (
   STDID                VARCHAR2(9)           NOT NULL,
   CARDNO               VARCHAR2(10)          NOT NULL,
   STDFIRSTNAME          VARCHAR2(50),
   STDLASTNAME          VARCHAR2(50),
   STDPHONENO           VARCHAR2(12),
   STDMAIL              VARCHAR2(50),
   STDADDRESS           VARCHAR2(100),
   STDPOINT             NUMBER(3,0),
   CONSTRAINT PK_STUDENTS PRIMARY KEY (STDID)
);

/*==============================================================*/
/* INDEX: STUDENTS_CARDS_FK                                     */
/*==============================================================*/
CREATE INDEX STUDENTS_CARDS_FK ON STUDENTS (
   CARDNO ASC
);

ALTER TABLE BOOKS
   ADD CONSTRAINT FK_BOOKS_BOOKS_AUT_AUTHORS FOREIGN KEY (AUTHORID)
      REFERENCES AUTHORS (AUTHORID);

ALTER TABLE BOOKS
   ADD CONSTRAINT FK_BOOKS_BOOKS_PUB_PUBLISHE FOREIGN KEY (PUBLISHERID)
      REFERENCES PUBLISHERS (PUBLISHERID);

ALTER TABLE BOOKS_CATEGORIES
   ADD CONSTRAINT FK_BOOKS_CA_BOOKS_CAT_BOOKS FOREIGN KEY (ISBN)
      REFERENCES BOOKS (ISBN);

ALTER TABLE BOOKS_CATEGORIES
   ADD CONSTRAINT FK_BOOKS_CA_BOOKS_CAT_CATEGORI FOREIGN KEY (CATEGORYID)
      REFERENCES CATEGORIES (CATEGORYID);

ALTER TABLE BOOKS_STUDENTS
   ADD CONSTRAINT FK_BOOKS_ST_BOOKS_STU_BOOKS FOREIGN KEY (ISBN)
      REFERENCES BOOKS (ISBN);

ALTER TABLE BOOKS_STUDENTS
   ADD CONSTRAINT FK_BOOKS_ST_BOOKS_STU_STUDENTS FOREIGN KEY (STDID)
      REFERENCES STUDENTS (STDID);

ALTER TABLE STUDENTS
   ADD CONSTRAINT FK_STUDENTS_STUDENTS__LIBRARYC FOREIGN KEY (CARDNO)
      REFERENCES LIBRARYCARDS (CARDNO);

INSERT INTO AUTHORS (AUTHORID, AUTHORFIRSTNAME, AUTHORLASTNAME, AUTHORCOUNTRY) 
VALUES ('A01', 'J.K.', 'Rowling', 'United Kingdom');
INSERT INTO AUTHORS (AUTHORID, AUTHORFIRSTNAME, AUTHORLASTNAME, AUTHORCOUNTRY) 
VALUES ('A02', 'Stephen', 'King', 'United States');
INSERT INTO AUTHORS (AUTHORID, AUTHORFIRSTNAME, AUTHORLASTNAME, AUTHORCOUNTRY) 
VALUES ('A03', 'Harper', 'Lee', 'United States');
INSERT INTO AUTHORS (AUTHORID, AUTHORFIRSTNAME, AUTHORLASTNAME, AUTHORCOUNTRY) 
VALUES ('A04', 'Gabriel', 'Garcia Marquez', 'Colombia');
INSERT INTO AUTHORS (AUTHORID, AUTHORFIRSTNAME, AUTHORLASTNAME, AUTHORCOUNTRY) 
VALUES ('A05', 'Margaret', 'Atwood', 'Canada');
INSERT INTO AUTHORS (AUTHORID, AUTHORFIRSTNAME, AUTHORLASTNAME, AUTHORCOUNTRY) 
VALUES ('A06', 'Chinua', 'Achebe', 'Nigeria');
INSERT INTO AUTHORS (AUTHORID, AUTHORFIRSTNAME, AUTHORLASTNAME, AUTHORCOUNTRY) 
VALUES ('A07', 'Toni', 'Morrison', 'United States');
INSERT INTO AUTHORS (AUTHORID, AUTHORFIRSTNAME, AUTHORLASTNAME, AUTHORCOUNTRY) 
VALUES ('A08', 'Arundhati', 'Roy', 'India');
INSERT INTO AUTHORS (AUTHORID, AUTHORFIRSTNAME, AUTHORLASTNAME, AUTHORCOUNTRY) 
VALUES ('A09', 'Khaled', 'Hosseini', 'Afghanistan');
INSERT INTO AUTHORS (AUTHORID, AUTHORFIRSTNAME, AUTHORLASTNAME, AUTHORCOUNTRY) 
VALUES ('A10', 'Isabel', 'Allende', 'Chile');

INSERT INTO PUBLISHERS (PUBLISHERID, PUBLISHERFULLNAME, PUBLISHERADDRESS)
VALUES ('PUB01', 'ABC Publications', '123 Main Street');
INSERT INTO PUBLISHERS (PUBLISHERID, PUBLISHERFULLNAME, PUBLISHERADDRESS)
VALUES ('PUB02', 'XYZ Books', '456 Elm Avenue');
INSERT INTO PUBLISHERS (PUBLISHERID, PUBLISHERFULLNAME, PUBLISHERADDRESS)
VALUES ('PUB03', 'Bookworm Publishing', '789 Oak Lane');
INSERT INTO PUBLISHERS (PUBLISHERID, PUBLISHERFULLNAME, PUBLISHERADDRESS)
VALUES ('PUB04', 'Library Press', '987 Maple Road');
INSERT INTO PUBLISHERS (PUBLISHERID, PUBLISHERFULLNAME, PUBLISHERADDRESS)
VALUES ('PUB05', 'Global Books Ltd.', '555 Pine Street');
INSERT INTO PUBLISHERS (PUBLISHERID, PUBLISHERFULLNAME, PUBLISHERADDRESS)
VALUES ('PUB06', 'Readers Publishing House', '321 Cedar Avenue');
INSERT INTO PUBLISHERS (PUBLISHERID, PUBLISHERFULLNAME, PUBLISHERADDRESS)
VALUES ('PUB07', 'Book Haven', '222 Oak Street');
INSERT INTO PUBLISHERS (PUBLISHERID, PUBLISHERFULLNAME, PUBLISHERADDRESS)
VALUES ('PUB08', 'Printed Words Publishers', '444 Elm Road');
INSERT INTO PUBLISHERS (PUBLISHERID, PUBLISHERFULLNAME, PUBLISHERADDRESS)
VALUES ('PUB09', 'Literary Works Ltd.', '888 Pine Avenue');
INSERT INTO PUBLISHERS (PUBLISHERID, PUBLISHERFULLNAME, PUBLISHERADDRESS)
VALUES ('PUB10', 'Inkwell Publishing', '666 Maple Lane');

INSERT INTO BOOKS (ISBN, AUTHORID, PUBLISHERID, BOOKTITLE, BOOKPUBLISHDATE, BOOKQUANTITY, BOOKPRICE) 
VALUES ('9780545010221', (SELECT AUTHORID FROM AUTHORS WHERE AUTHORID = 'A01'), (SELECT PUBLISHERID FROM PUBLISHERS WHERE PUBLISHERID = 'PUB01'), 'Harry Potter and the Deathly Hallows', TO_DATE('2007/07/21', 'YYYY/MM/DD'), 100, 19.99);
INSERT INTO BOOKS (ISBN, AUTHORID, PUBLISHERID, BOOKTITLE, BOOKPUBLISHDATE, BOOKQUANTITY, BOOKPRICE) 
VALUES ('9781501142970', (SELECT AUTHORID FROM AUTHORS WHERE AUTHORID = 'A02'), (SELECT PUBLISHERID FROM PUBLISHERS WHERE PUBLISHERID = 'PUB02'), 'The Outsider', TO_DATE('2018/05/22', 'YYYY/MM/DD'), 50, 18.99);
INSERT INTO BOOKS (ISBN, AUTHORID, PUBLISHERID, BOOKTITLE, BOOKPUBLISHDATE, BOOKQUANTITY, BOOKPRICE) 
VALUES ('9780060935467', (SELECT AUTHORID FROM AUTHORS WHERE AUTHORID = 'A03'), (SELECT PUBLISHERID FROM PUBLISHERS WHERE PUBLISHERID = 'PUB03'), 'To Kill a Mockingbird', TO_DATE('1960/07/11', 'YYYY/MM/DD'), 200, 10.99);
INSERT INTO BOOKS (ISBN, AUTHORID, PUBLISHERID, BOOKTITLE, BOOKPUBLISHDATE, BOOKQUANTITY, BOOKPRICE) 
VALUES ('9780307389733', (SELECT AUTHORID FROM AUTHORS WHERE AUTHORID = 'A04'), (SELECT PUBLISHERID FROM PUBLISHERS WHERE PUBLISHERID = 'PUB04'), 'One Hundred Years of Solitude', TO_DATE('1967/05/30', 'YYYY/MM/DD'), 75, 14.99);
INSERT INTO BOOKS (ISBN, AUTHORID, PUBLISHERID, BOOKTITLE, BOOKPUBLISHDATE, BOOKQUANTITY, BOOKPRICE) 
VALUES ('9780385490818', (SELECT AUTHORID FROM AUTHORS WHERE AUTHORID = 'A05'), (SELECT PUBLISHERID FROM PUBLISHERS WHERE PUBLISHERID = 'PUB05'), 'The Handmaid''s Tale', TO_DATE('1985/06/14', 'YYYY/MM/DD'), 150, 12.99);
INSERT INTO BOOKS (ISBN, AUTHORID, PUBLISHERID, BOOKTITLE, BOOKPUBLISHDATE, BOOKQUANTITY, BOOKPRICE) 
VALUES ('9780807610664', (SELECT AUTHORID FROM AUTHORS WHERE AUTHORID = 'A06'), (SELECT PUBLISHERID FROM PUBLISHERS WHERE PUBLISHERID = 'PUB06'), 'Things Fall Apart', TO_DATE('1958/06/17', 'YYYY/MM/DD'), 125, 8.99);
INSERT INTO BOOKS (ISBN, AUTHORID, PUBLISHERID, BOOKTITLE, BOOKPUBLISHDATE, BOOKQUANTITY, BOOKPRICE) 
VALUES ('9781400033423', (SELECT AUTHORID FROM AUTHORS WHERE AUTHORID = 'A07'), (SELECT PUBLISHERID FROM PUBLISHERS WHERE PUBLISHERID = 'PUB07'), 'Beloved', TO_DATE('1987/09/02', 'YYYY/MM/DD'), 100, 11.99);
INSERT INTO BOOKS (ISBN, AUTHORID, PUBLISHERID, BOOKTITLE, BOOKPUBLISHDATE, BOOKQUANTITY, BOOKPRICE) 
VALUES ('9780679745587', (SELECT AUTHORID FROM AUTHORS WHERE AUTHORID = 'A08'), (SELECT PUBLISHERID FROM PUBLISHERS WHERE PUBLISHERID = 'PUB08'), 'The God of Small Things', TO_DATE('1997/04/04', 'YYYY/MM/DD'), 80, 9.99);
INSERT INTO BOOKS (ISBN, AUTHORID, PUBLISHERID, BOOKTITLE, BOOKPUBLISHDATE, BOOKQUANTITY, BOOKPRICE) 
VALUES ('9781594480003', (SELECT AUTHORID FROM AUTHORS WHERE AUTHORID = 'A09'), (SELECT PUBLISHERID FROM PUBLISHERS WHERE PUBLISHERID = 'PUB09'), 'The Kite Runner', TO_DATE('2003/05/29', 'YYYY/MM/DD'), 90, 13.99);
INSERT INTO BOOKS (ISBN, AUTHORID, PUBLISHERID, BOOKTITLE, BOOKPUBLISHDATE, BOOKQUANTITY, BOOKPRICE) 
VALUES ('9780007548699', (SELECT AUTHORID FROM AUTHORS WHERE AUTHORID = 'A10'), (SELECT PUBLISHERID FROM PUBLISHERS WHERE PUBLISHERID = 'PUB10'), 'The House of the Spirits', TO_DATE('1982/06/22', 'YYYY/MM/DD'), 70, 10.99);

INSERT INTO CATEGORIES (CATEGORYID, CATEGORYNAME) 
VALUES ('C01', 'Fantasy');
INSERT INTO CATEGORIES (CATEGORYID, CATEGORYNAME) 
VALUES ('C02', 'Horror');
INSERT INTO CATEGORIES (CATEGORYID, CATEGORYNAME) 
VALUES ('C03', 'Mystery');
INSERT INTO CATEGORIES (CATEGORYID, CATEGORYNAME) 
VALUES ('C04', 'Romance');
INSERT INTO CATEGORIES (CATEGORYID, CATEGORYNAME) 
VALUES ('C05', 'Science Fiction');
INSERT INTO CATEGORIES (CATEGORYID, CATEGORYNAME) 
VALUES ('C06', 'Thriller');
INSERT INTO CATEGORIES (CATEGORYID, CATEGORYNAME) 
VALUES ('C07', 'Historical Fiction');
INSERT INTO CATEGORIES (CATEGORYID, CATEGORYNAME) 
VALUES ('C08', 'Biography');
INSERT INTO CATEGORIES (CATEGORYID, CATEGORYNAME) 
VALUES ('C09', 'Young Adult');
INSERT INTO CATEGORIES (CATEGORYID, CATEGORYNAME) 
VALUES ('C10', 'Self-Help');

INSERT INTO BOOKS_CATEGORIES (ISBN, CATEGORYID)
VALUES ('9780545010221', 'C01');
INSERT INTO BOOKS_CATEGORIES (ISBN, CATEGORYID)
VALUES ('9781501142970', 'C02');
INSERT INTO BOOKS_CATEGORIES (ISBN, CATEGORYID)
VALUES ('9780060935467', 'C03');
INSERT INTO BOOKS_CATEGORIES (ISBN, CATEGORYID)
VALUES ('9780307389733', 'C04');
INSERT INTO BOOKS_CATEGORIES (ISBN, CATEGORYID)
VALUES ('9780385490818', 'C05');
INSERT INTO BOOKS_CATEGORIES (ISBN, CATEGORYID)
VALUES ('9780807610664', 'C06');
INSERT INTO BOOKS_CATEGORIES (ISBN, CATEGORYID)
VALUES ('9781400033423', 'C07');
INSERT INTO BOOKS_CATEGORIES (ISBN, CATEGORYID)
VALUES ('9780679745587', 'C08');
INSERT INTO BOOKS_CATEGORIES (ISBN, CATEGORYID)
VALUES ('9781594480003', 'C09');
INSERT INTO BOOKS_CATEGORIES (ISBN, CATEGORYID)
VALUES ('9780007548699', 'C10');

INSERT INTO LIBRARYCARDS (CARDNO, CARDEXPDATE)
VALUES ('1234567890', TO_DATE('2023-05-31', 'YYYY-MM-DD'));
INSERT INTO LIBRARYCARDS (CARDNO, CARDEXPDATE)
VALUES ('9876543210', TO_DATE('2023-08-15', 'YYYY-MM-DD'));
INSERT INTO LIBRARYCARDS (CARDNO, CARDEXPDATE)
VALUES ('2468135790', TO_DATE('2023-06-30', 'YYYY-MM-DD'));
INSERT INTO LIBRARYCARDS (CARDNO, CARDEXPDATE)
VALUES ('1357924680', TO_DATE('2023-09-30', 'YYYY-MM-DD'));
INSERT INTO LIBRARYCARDS (CARDNO, CARDEXPDATE)
VALUES ('0987654321', TO_DATE('2023-07-31', 'YYYY-MM-DD'));
INSERT INTO LIBRARYCARDS (CARDNO, CARDEXPDATE)
VALUES ('5678901234', TO_DATE('2023-10-15', 'YYYY-MM-DD'));
INSERT INTO LIBRARYCARDS (CARDNO, CARDEXPDATE)
VALUES ('4321098765', TO_DATE('2023-08-31', 'YYYY-MM-DD'));
INSERT INTO LIBRARYCARDS (CARDNO, CARDEXPDATE)
VALUES ('3872573213', TO_DATE('2023-12-31', 'YYYY-MM-DD'));
INSERT INTO LIBRARYCARDS (CARDNO, CARDEXPDATE)
VALUES ('7890123456', TO_DATE('2023-07-15', 'YYYY-MM-DD'));
INSERT INTO LIBRARYCARDS (CARDNO, CARDEXPDATE)
VALUES ('6543210987', TO_DATE('2023-11-30', 'YYYY-MM-DD'));

INSERT INTO STUDENTS (STDID, CARDNO, STDFIRSTNAME, STDLASTNAME, STDPHONENO, STDMAIL, STDADDRESS, STDPOINT)
VALUES ('S0001', (SELECT CARDNO FROM LIBRARYCARDS WHERE CARDNO = '1234567890'), 'John', 'Doe', '123-456-7890', 'john.doe@example.com', '123 Main St', 80);
INSERT INTO STUDENTS (STDID, CARDNO, STDFIRSTNAME, STDLASTNAME, STDPHONENO, STDMAIL, STDADDRESS, STDPOINT)
VALUES ('S0002', (SELECT CARDNO FROM LIBRARYCARDS WHERE CARDNO = '9876543210'), 'Jane', 'Smith', '987-654-3210', 'jane.smith@example.com', '456 Elm St', 75);
INSERT INTO STUDENTS (STDID, CARDNO, STDFIRSTNAME, STDLASTNAME, STDPHONENO, STDMAIL, STDADDRESS, STDPOINT)
VALUES ('S0003', (SELECT CARDNO FROM LIBRARYCARDS WHERE CARDNO = '2468135790'), 'Michael', 'Johnson', '246-813-5790', 'michael.johnson@example.com', '789 Oak St', 90);
INSERT INTO STUDENTS (STDID, CARDNO, STDFIRSTNAME, STDLASTNAME, STDPHONENO, STDMAIL, STDADDRESS, STDPOINT)
VALUES ('S0004', (SELECT CARDNO FROM LIBRARYCARDS WHERE CARDNO = '1357924680'), 'Emily', 'Williams', '135-792-4680', 'emily.williams@example.com', '321 Pine St', 85);
INSERT INTO STUDENTS (STDID, CARDNO, STDFIRSTNAME, STDLASTNAME, STDPHONENO, STDMAIL, STDADDRESS, STDPOINT)
VALUES ('S0005', (SELECT CARDNO FROM LIBRARYCARDS WHERE CARDNO = '0987654321'), 'David', 'Brown', '098-765-4321', 'david.brown@example.com', '654 Cedar St', 70);
INSERT INTO STUDENTS (STDID, CARDNO, STDFIRSTNAME, STDLASTNAME, STDPHONENO, STDMAIL, STDADDRESS, STDPOINT)
VALUES ('S0006', (SELECT CARDNO FROM LIBRARYCARDS WHERE CARDNO = '5678901234'), 'Sarah', 'Miller', '567-890-1234', 'sarah.miller@example.com', '987 Maple St', 95);
INSERT INTO STUDENTS (STDID, CARDNO, STDFIRSTNAME, STDLASTNAME, STDPHONENO, STDMAIL, STDADDRESS, STDPOINT)
VALUES ('S0007', (SELECT CARDNO FROM LIBRARYCARDS WHERE CARDNO = '4321098765'), 'Matthew', 'Wilson', '432-109-8765', 'matthew.wilson@example.com', '654 Oak St', 60);
INSERT INTO STUDENTS (STDID, CARDNO, STDFIRSTNAME, STDLASTNAME, STDPHONENO, STDMAIL, STDADDRESS, STDPOINT)
VALUES ('S0008', (SELECT CARDNO FROM LIBRARYCARDS WHERE CARDNO = '3872573213'), 'Olivia', 'Taylor', '387-257-3213', 'olivia.taylor@example.com', '321 Maple St', 80);
INSERT INTO STUDENTS (STDID, CARDNO, STDFIRSTNAME, STDLASTNAME, STDPHONENO, STDMAIL, STDADDRESS, STDPOINT)
VALUES ('S0009', (SELECT CARDNO FROM LIBRARYCARDS WHERE CARDNO = '7890123456'), 'Daniel', 'Anderson', '789-012-3456', 'daniel.anderson@example.com', '654 Elm St', 85);
INSERT INTO STUDENTS (STDID, CARDNO, STDFIRSTNAME, STDLASTNAME, STDPHONENO, STDMAIL, STDADDRESS, STDPOINT)
VALUES ('S0010', (SELECT CARDNO FROM LIBRARYCARDS WHERE CARDNO = '6543210987'), 'James', 'Roberts', '444-777-8888', 'james.roberts@example.com', '123 Oak St', 50);

INSERT INTO BOOKS_STUDENTS (ISBN, STDID, BOOKBORROWINGDATE, BOOKDELIVERYDATE)
VALUES ('9780545010221', 'S0001', TO_DATE('2023/05/01', 'YYYY/MM/DD'), TO_DATE('2023/05/15', 'YYYY/MM/DD'));
INSERT INTO BOOKS_STUDENTS (ISBN, STDID, BOOKBORROWINGDATE, BOOKDELIVERYDATE)
VALUES ('9781501142970', 'S0002', TO_DATE('2023/04/20', 'YYYY/MM/DD'), TO_DATE('2023/05/10', 'YYYY/MM/DD'));
INSERT INTO BOOKS_STUDENTS (ISBN, STDID, BOOKBORROWINGDATE, BOOKDELIVERYDATE)
VALUES ('9780060935467', 'S0003', TO_DATE('2023/05/03', 'YYYY/MM/DD'), TO_DATE('2023/05/17', 'YYYY/MM/DD'));
INSERT INTO BOOKS_STUDENTS (ISBN, STDID, BOOKBORROWINGDATE, BOOKDELIVERYDATE)
VALUES ('9780307389733', 'S0004', TO_DATE('2023/04/25', 'YYYY/MM/DD'), TO_DATE('2023/05/08', 'YYYY/MM/DD'));
INSERT INTO BOOKS_STUDENTS (ISBN, STDID, BOOKBORROWINGDATE, BOOKDELIVERYDATE)
VALUES ('9780385490818', 'S0005', TO_DATE('2023/05/10', 'YYYY/MM/DD'), TO_DATE('2023/05/24', 'YYYY/MM/DD'));
INSERT INTO BOOKS_STUDENTS (ISBN, STDID, BOOKBORROWINGDATE, BOOKDELIVERYDATE)
VALUES ('9780807610664', 'S0006', TO_DATE('2023/04/28', 'YYYY/MM/DD'), TO_DATE('2023/05/12', 'YYYY/MM/DD'));
INSERT INTO BOOKS_STUDENTS (ISBN, STDID, BOOKBORROWINGDATE, BOOKDELIVERYDATE)
VALUES ('9781400033423', 'S0007', TO_DATE('2023/05/05', 'YYYY/MM/DD'), TO_DATE('2023/05/19', 'YYYY/MM/DD'));
INSERT INTO BOOKS_STUDENTS (ISBN, STDID, BOOKBORROWINGDATE, BOOKDELIVERYDATE)
VALUES ('9780679745587', 'S0008', TO_DATE('2023/05/08', 'YYYY/MM/DD'), TO_DATE('2023/05/22', 'YYYY/MM/DD'));
INSERT INTO BOOKS_STUDENTS (ISBN, STDID, BOOKBORROWINGDATE, BOOKDELIVERYDATE)
VALUES ('9781594480003', 'S0009', TO_DATE('2023/05/12', 'YYYY/MM/DD'), TO_DATE('2023/05/26', 'YYYY/MM/DD'));
INSERT INTO BOOKS_STUDENTS (ISBN, STDID, BOOKBORROWINGDATE, BOOKDELIVERYDATE)
VALUES ('9780007548699', 'S0010', TO_DATE('2023/05/15', 'YYYY/MM/DD'), TO_DATE('2023/05/29', 'YYYY/MM/DD'));


/* Query #1 BOOK_DETAILS VIEW */
CREATE VIEW BOOK_DETAILS AS
SELECT B.BOOKTITLE, A.AUTHORFIRSTNAME || ' ' || A.AUTHORLASTNAME AS AUTHORNAME,
       P.PUBLISHERFULLNAME, C.CATEGORYNAME, B.BOOKQUANTITY
FROM BOOKS B
JOIN AUTHORS A ON B.AUTHORID = A.AUTHORID
JOIN PUBLISHERS P ON B.PUBLISHERID = P.PUBLISHERID
JOIN BOOKS_CATEGORIES BC ON B.ISBN = BC.ISBN
JOIN CATEGORIES C ON BC.CATEGORYID = C.CATEGORYID;


/* Query #2 STUDENT_BOOKS VIEW */
CREATE VIEW STUDENT_BOOKS AS
SELECT S.STDFIRSTNAME || ' ' || S.STDLASTNAME AS STUDENTNAME,
       B.BOOKTITLE, BS.BOOKBORROWINGDATE, BS.BOOKDELIVERYDATE
FROM STUDENTS S
JOIN BOOKS_STUDENTS BS ON S.STDID = BS.STDID
JOIN BOOKS B ON BS.ISBN = B.ISBN;


/* Query #3 BOOK_DETAILS MATERIALIZED VIEW */
CREATE MATERIALIZED VIEW BOOK_DETAILS_MV
REFRESH START WITH SYSDATE NEXT TRUNC(SYSDATE) + 1
AS
SELECT B.BOOKTITLE, A.AUTHORFIRSTNAME || ' ' || A.AUTHORLASTNAME AS AUTHORNAME,
       P.PUBLISHERFULLNAME, C.CATEGORYNAME, B.BOOKQUANTITY
FROM BOOKS B
JOIN AUTHORS A ON B.AUTHORID = A.AUTHORID
JOIN PUBLISHERS P ON B.PUBLISHERID = P.PUBLISHERID
JOIN BOOKS_CATEGORIES BC ON B.ISBN = BC.ISBN
JOIN CATEGORIES C ON BC.CATEGORYID = C.CATEGORYID;


/* Query #4 STUDENT_BOOKS MATERIALIZED VIEW */
CREATE MATERIALIZED VIEW STUDENT_BOOKS_MV
REFRESH START WITH SYSDATE NEXT TRUNC(SYSDATE) + 1
AS
SELECT S.STDFIRSTNAME || ' ' || S.STDLASTNAME AS STUDENTNAME,
       B.BOOKTITLE, BS.BOOKBORROWINGDATE, BS.BOOKDELIVERYDATE
FROM STUDENTS S
JOIN BOOKS_STUDENTS BS ON S.STDID = BS.STDID
JOIN BOOKS B ON BS.ISBN = B.ISBN;


/* Query #5 CASE EXPRESSION 1 */
SELECT B.BOOKTITLE,
       CASE
           WHEN B.BOOKQUANTITY = 0 THEN 'Out of Stock'
           WHEN B.BOOKQUANTITY > 0 AND B.BOOKQUANTITY <= 90 THEN 'Low Stock'
           WHEN B.BOOKQUANTITY > 90 AND B.BOOKQUANTITY <= 200 THEN 'Moderate Stock'
           ELSE 'High Stock'
       END AS STOCK_STATUS
FROM BOOKS B;


/* Query #6 CASE EXPRESSION 2 */
SELECT B.ISBN,
       B.BOOKTITLE,
       B.BOOKPRICE,
       CASE
           WHEN B.BOOKPRICE > 16 THEN 'Expensive'
           WHEN B.BOOKPRICE > 11 THEN 'Moderate'
           ELSE 'Affordable'
       END AS PRICE_CATEGORY
FROM BOOKS B;


/* Query #7 UNION ALL */
SELECT A.AUTHORFIRSTNAME, A.AUTHORLASTNAME
FROM AUTHORS A
WHERE A.AUTHORCOUNTRY = 'United States'
UNION ALL
SELECT B.ISBN, B.BOOKTITLE
FROM BOOKS B
WHERE B.BOOKPRICE > 14;


/* Query #8 ANALYTICAL FUNCTION 1 */
SELECT B.ISBN,
       B.BOOKTITLE,
       B.BOOKPRICE,
       RANK() OVER (ORDER BY B.BOOKPRICE DESC) AS PRICE_RANK
FROM BOOKS B;


/* Query #9 ANALYTICAL FUNCTION 2 */
SELECT B.ISBN,
       B.BOOKTITLE,
       B.BOOKPRICE,
       NTILE(4) OVER (ORDER BY B.BOOKPRICE) AS PRICE_QUARTILE
FROM BOOKS B;


/* Query #10 WINDOWING FUNCTION 1 */
SELECT B.ISBN,
       B.BOOKTITLE,
       B.BOOKPRICE,
       SUM(B.BOOKPRICE) OVER (ORDER BY B.BOOKPRICE ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS CUMULATIVE_SUM
FROM BOOKS B;


/* Query #11 WINDOWING FUNCTION 2 */
SELECT B.ISBN,
       B.BOOKTITLE,
       B.BOOKPRICE,
       AVG(B.BOOKPRICE) OVER (ORDER BY B.BOOKPRICE ROWS BETWEEN 2 PRECEDING AND CURRENT ROW) AS PRICE_AVG
FROM BOOKS B;


/* Query #12 DIMENSION TABLES AND FACT TABLE */
CREATE TABLE DIM_AUTHOR (
  AUTHOR_ID             VARCHAR2(10) PRIMARY KEY,
  AUTHOR_NAME           VARCHAR2(30)
);

CREATE TABLE DIM_PUBLISHER (
  PUBLISHER_ID          VARCHAR2(10) PRIMARY KEY,
  PUBLISHER_NAME        VARCHAR2(30)
);

CREATE TABLE DIM_GENRE (
  GENRE_ID              VARCHAR2(10) PRIMARY KEY,
  GENRE_NAME            VARCHAR2(30)
);

CREATE TABLE FACT_BOOK (
  BOOK_ID               VARCHAR2(10) PRIMARY KEY,
  AUTHOR_ID             VARCHAR2(10),
  PUBLISHER_ID          VARCHAR2(10),
  GENRE_ID              VARCHAR2(10),
  BOOK_TITLE            VARCHAR2(50),
  BOOK_PRICE            DECIMAL(10, 2),
  FOREIGN KEY (AUTHOR_ID) REFERENCES DIM_AUTHOR(AUTHOR_ID),
  FOREIGN KEY (PUBLISHER_ID) REFERENCES DIM_PUBLISHER(PUBLISHER_ID),
  FOREIGN KEY (GENRE_ID) REFERENCES DIM_GENRE(GENRE_ID)
);

INSERT INTO DIM_AUTHOR (AUTHOR_ID, AUTHOR_NAME) VALUES ('A01', 'J.K.');
INSERT INTO DIM_AUTHOR (AUTHOR_ID, AUTHOR_NAME) VALUES ('A02', 'Stephen');
INSERT INTO DIM_AUTHOR (AUTHOR_ID, AUTHOR_NAME) VALUES ('A03', 'Harper');

INSERT INTO DIM_PUBLISHER (PUBLISHER_ID, PUBLISHER_NAME) VALUES ('PUB01', 'ABC Publications');
INSERT INTO DIM_PUBLISHER (PUBLISHER_ID, PUBLISHER_NAME) VALUES ('PUB02', 'XYZ Books');
INSERT INTO DIM_PUBLISHER (PUBLISHER_ID, PUBLISHER_NAME) VALUES ('PUB03', 'Bookworm Publishing');

INSERT INTO DIM_GENRE (GENRE_ID, GENRE_NAME) VALUES ('C01', 'Fantasy');
INSERT INTO DIM_GENRE (GENRE_ID, GENRE_NAME) VALUES ('C02', 'Horror');
INSERT INTO DIM_GENRE (GENRE_ID, GENRE_NAME) VALUES ('C03', 'Mystery');

INSERT INTO FACT_BOOK (BOOK_ID, AUTHOR_ID, PUBLISHER_ID, GENRE_ID, BOOK_TITLE, BOOK_PRICE) VALUES ('C01', 'A01', 'PUB01', 'C01', 'Harry Potter and the Deathly Hallows', 19.99);
INSERT INTO FACT_BOOK (BOOK_ID, AUTHOR_ID, PUBLISHER_ID, GENRE_ID, BOOK_TITLE, BOOK_PRICE) VALUES ('C02', 'A02', 'PUB02', 'C02', 'The Outsider', 18.99);
INSERT INTO FACT_BOOK (BOOK_ID, AUTHOR_ID, PUBLISHER_ID, GENRE_ID, BOOK_TITLE, BOOK_PRICE) VALUES ('C03', 'A03', 'PUB03', 'C03', 'To Kill a Mockingbird', 10.99);

SELECT DA.AUTHOR_NAME, COUNT(*) AS BOOK_COUNT
FROM FACT_BOOK FB
JOIN DIM_AUTHOR DA ON FB.AUTHOR_ID = DA.AUTHOR_ID
GROUP BY CUBE (DA.AUTHOR_NAME);


/* Query #13 MODEL, PARTITION BY, DIMENSION BY */
SELECT AUTHOR_NAME, PUBLISHER_NAME, GENRE_NAME, BOOK_COUNT
FROM (
  SELECT DA.AUTHOR_NAME, DP.PUBLISHER_NAME, DG.GENRE_NAME, COUNT(*) AS BOOK_COUNT
  FROM FACT_BOOK FB
  JOIN DIM_AUTHOR DA ON FB.AUTHOR_ID = DA.AUTHOR_ID
  JOIN DIM_PUBLISHER DP ON FB.PUBLISHER_ID = DP.PUBLISHER_ID
  JOIN DIM_GENRE DG ON FB.GENRE_ID = DG.GENRE_ID
  GROUP BY DA.AUTHOR_NAME, DP.PUBLISHER_NAME, DG.GENRE_NAME
) 
MODEL
  PARTITION BY (AUTHOR_NAME)
  DIMENSION BY (PUBLISHER_NAME, GENRE_NAME)
  MEASURES (BOOK_COUNT)
  RULES (
    BOOK_COUNT[ANY, ANY] = SUM(BOOK_COUNT)[PUBLISHER_NAME, GENRE_NAME]
);
